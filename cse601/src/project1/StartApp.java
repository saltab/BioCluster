package project1;

import java.sql.SQLException;
import java.util.Map;
import java.util.TreeMap;

import sqlconnect.SQLConnect;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author saurabhtalbar
 */
public class StartApp extends javax.swing.JFrame {

    /**
     * Creates new form StartApp
     */
    public StartApp() {
        initComponents();
        setFalse();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jScrollPane4 = new javax.swing.JScrollPane();
        outputText = new javax.swing.JTextArea();
        part2Label = new javax.swing.JLabel();
        part2Panel = new javax.swing.JPanel();
        queryCombo = new javax.swing.JComboBox();
        diseaseCombo = new javax.swing.JComboBox();
        goText = new javax.swing.JTextField();
        goLabel = new javax.swing.JLabel();
        queryLabel = new javax.swing.JLabel();
        diseaseLabel = new javax.swing.JLabel();
        clusterLabel = new javax.swing.JLabel();
        measurementLabel = new javax.swing.JLabel();
        clusterText = new javax.swing.JTextField();
        measurementText = new javax.swing.JTextField();
        execButton = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        outputLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        optionLabel = new javax.swing.JLabel();
        optionCombo = new javax.swing.JComboBox();
        diseasepart3Label = new javax.swing.JLabel();
        diseasepart3Combo = new javax.swing.JComboBox();
        execpart3Button = new javax.swing.JButton();
        part3Label = new javax.swing.JLabel();
        namesLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        outputText.setColumns(20);
        outputText.setRows(5);
        jScrollPane4.setViewportView(outputText);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 90, 290, 120));

        part2Label.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        part2Label.setText("Part II");
        getContentPane().add(part2Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        part2Panel.setBackground(java.awt.SystemColor.control);

        queryCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Query 1", "Query 2", "Query 3", "Query 4", "Query 5", "Query 6" }));
        queryCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryComboActionPerformed(evt);
            }
        });

        diseaseCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL", "AML", "Leukemia","Tumor" }));

        goLabel.setText("Enter Go ID below");

        queryLabel.setText("Choose Query");

        diseaseLabel.setText("Choose Disease");

        clusterLabel.setText("Enter Cluster ID");

        measurementLabel.setText("Enter Measurement ID");

        clusterText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clusterTextActionPerformed(evt);
            }
        });

        execButton.setText("Execute");
        execButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                execButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout part2PanelLayout = new org.jdesktop.layout.GroupLayout(part2Panel);
        part2Panel.setLayout(part2PanelLayout);
        part2PanelLayout.setHorizontalGroup(
            part2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(part2PanelLayout.createSequentialGroup()
                .add(part2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, part2PanelLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(execButton))
                    .add(part2PanelLayout.createSequentialGroup()
                        .add(part2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(part2PanelLayout.createSequentialGroup()
                                .add(27, 27, 27)
                                .add(part2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(clusterLabel)
                                    .add(clusterText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(92, 92, 92)
                                .add(part2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(part2PanelLayout.createSequentialGroup()
                                        .add(6, 6, 6)
                                        .add(measurementText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(measurementLabel)))
                            .add(part2PanelLayout.createSequentialGroup()
                                .add(15, 15, 15)
                                .add(part2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(part2PanelLayout.createSequentialGroup()
                                        .add(queryLabel)
                                        .add(78, 78, 78)
                                        .add(diseaseLabel)
                                        .add(36, 36, 36))
                                    .add(part2PanelLayout.createSequentialGroup()
                                        .add(queryCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(diseaseCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(20, 20, 20)))
                                .add(part2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(goLabel)
                                    .add(part2PanelLayout.createSequentialGroup()
                                        .add(6, 6, 6)
                                        .add(goText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 135, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                        .add(0, 76, Short.MAX_VALUE)))
                .addContainerGap())
        );
        part2PanelLayout.setVerticalGroup(
            part2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(part2PanelLayout.createSequentialGroup()
                .add(28, 28, 28)
                .add(part2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(goLabel)
                    .add(queryLabel)
                    .add(diseaseLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(part2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(queryCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(diseaseCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(goText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(41, 41, 41)
                .add(part2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(clusterLabel)
                    .add(measurementLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(part2PanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(clusterText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(measurementText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 11, Short.MAX_VALUE)
                .add(execButton))
        );

        getContentPane().add(part2Panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 540, 210));

        title.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        title.setText("Project 1 Demo");
        getContentPane().add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, -1, -1));

        outputLabel.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        outputLabel.setText("Output");
        getContentPane().add(outputLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 70, -1, -1));

        jPanel1.setBackground(java.awt.SystemColor.control);

        optionLabel.setText("Choose One Option");

        optionCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Find Informative Genes", "Classify New Patient" }));
        optionCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionComboActionPerformed(evt);
            }
        });

        diseasepart3Label.setText("Choose Disease");

        diseasepart3Combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ALL", "AML", "Colon Cancer", "Breast Cancer","Tumor" }));

        execpart3Button.setText("Execute");
        execpart3Button.addActionListener(new java.awt.event.ActionListener() {
        	public void actionPerformed(java.awt.event.ActionEvent evt){
                
			execpart3ButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(21, 21, 21)
                                .add(optionLabel))
                            .add(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .add(optionCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(64, 64, 64)
                                .add(diseasepart3Label))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(48, 48, 48)
                                .add(diseasepart3Combo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(0, 138, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(execpart3Button)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(27, 27, 27)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(optionLabel)
                    .add(diseasepart3Label))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(optionCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(diseasepart3Combo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 45, Short.MAX_VALUE)
                .add(execpart3Button))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 540, 150));

        part3Label.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        part3Label.setText("Part III");
        getContentPane().add(part3Label, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, -1, -1));

        namesLabel.setText("<html>\nSubmitted by:<br>\nPrudhvi Reddy<br>\nSaurabh Talbar\n</html>");
        getContentPane().add(namesLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 420, 160, 80));

        statusLabel.setText("Status Will Appear Here");
        getContentPane().add(statusLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 10, 180, 50));

        pack();
    }// </editor-fold>

    private void setFalse(){
            diseaseLabel.setVisible(false);
            diseaseCombo.setVisible(false);
            
            goLabel.setVisible(false);
            goText.setVisible(false);
            
            clusterLabel.setVisible(false);
            clusterText.setVisible(false);
            
            measurementLabel.setVisible(false);
            measurementText.setVisible(false);
            
            diseasepart3Label.setVisible(false);
            diseasepart3Combo.setVisible(false);
            
            
        
    }
    
    private String retDisease(){
        String disease = (String) diseaseCombo.getSelectedItem();
        
        return disease;
    }
    
    private String retDiseasePart3(){
        String disease = (String) diseasepart3Combo.getSelectedItem();
        
        return disease;
    }
    
    private String retOption(){
        String option = (String) optionCombo.getSelectedItem();
        
        return option;
    }
    
    private String retQuery(){
        String query = (String) queryCombo.getSelectedItem();
        
        return query;
    }
    
    private Integer retGoID(){
        int go = Integer.parseInt(goText.getText());
                
        return go;
    }
    
    private Integer retClusterID(){
        int cluster = Integer.parseInt(clusterText.getText());
                
        return cluster;
    }
    
    private Integer retMeasurementID(){
        int muID = Integer.parseInt(measurementText.getText());
                
        return muID;
    }  
    
    
    private void queryComboActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String query = retQuery();
        
        if(query.contentEquals("Query 1") || query.contentEquals("Query 2")){
            diseaseLabel.setVisible(true);
            diseaseCombo.setVisible(true);
            
            clusterLabel.setVisible(false);
            clusterText.setVisible(false);
            
            measurementLabel.setVisible(false);
            measurementText.setVisible(false);
            
            goLabel.setVisible(false);
            goText.setVisible(false);
            
        }
        
        else if(query.contentEquals("Query 3")){
            
            diseaseLabel.setVisible(true);
            diseaseCombo.setVisible(true);
            
            clusterLabel.setVisible(true);
            clusterText.setVisible(true);
            
            measurementLabel.setVisible(true);
            measurementText.setVisible(true);
            
            goLabel.setVisible(false);
            goText.setVisible(false);
            
            
        }
        else if(query.contentEquals("Query 4") || query.contentEquals("Query 5") || query.contentEquals("Query 6")){
            
            diseaseLabel.setVisible(false);
            diseaseCombo.setVisible(false);
            
            clusterLabel.setVisible(false);
            clusterText.setVisible(false);
            
            measurementLabel.setVisible(false);
            measurementText.setVisible(false);
            
            goLabel.setVisible(true);
            goText.setVisible(true);
            
            
                       
        }
              
    }

    private void clusterTextActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    


    private void execButtonActionPerformed(java.awt.event.ActionEvent evt)  {
        // TODO add your handling code here:
    	SQLConnect sqlobj = new SQLConnect();
        String query = retQuery();
        
        if(query.contentEquals("Query 1")){
            
            //diseaseLabel.setVisible(true);
            //diseaseCombo.setVisible(true);
          
            statusLabel.setText("Query 1 is being executed!");
            String disease = retDisease();
            
            //call query1(sqlobj, disease);
            int count;
			try {
				count = Project1.query1(sqlobj,disease);
				outputText.setText("Count of "+ disease + " = " + count);
	            statusLabel.setText("Query 1 executed!");
	            
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            
            
        }
        else if(query.contentEquals("Query 2")){
            statusLabel.setText("Query 2 is being executed!");
            String disease = retDisease();
            
            String[] drugs;
			try {
				drugs = Project1.query2(sqlobj,disease);
				outputText.setText("Types of drugs for " + disease + " are: \n");            
	    		for(int i = 0;i< drugs.length;i++)
	    			outputText.append(drugs[i]+"\n");    			

	            statusLabel.setText("Query 2 executed!");

			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

                    }
        else if(query.contentEquals("Query 3")){
            
            statusLabel.setText("Query 3 is being executed!");
            String disease = retDisease();            
            
            int clusterID = retClusterID(), muID = retMeasurementID();
            //call query1(sqlobj, disease, clusterID, measID);

            String[] mRNA;
			try {
				mRNA = Project1.query3(sqlobj, disease, clusterID, muID);
				outputText.setText("There are " +mRNA.length +" mRNA values : \n");            
	    		for(int i = 0;i< mRNA.length;i++)
	    			outputText.append(mRNA[i]+"\n");    			

	            statusLabel.setText("Query 3 executed!");

			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            
                    }
        else if(query.contentEquals("Query 4")){
            int goID = retGoID();
            
            double result;
			try {
				result = Project1.query4(sqlobj, goID);
				outputText.setText("t statistics is: "+result);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            
            
            statusLabel.setText("Query 4 Executed");
        }
        else if(query.contentEquals("Query 5")){
            int goID = retGoID();
            double result;
			try {
				result = Project1.query5(sqlobj, goID);
				outputText.setText("f statistics is: "+result);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            
            
            statusLabel.setText("Query 5 Executed");
        }
        else if(query.contentEquals("Query 6")){
            int goID = retGoID();
            double[] result;
			try {
				result = Project1.query6(sqlobj, goID);
				outputText.setText("Correlation between two ALL patients = "+result[0]+"\n");
	            outputText.append("\nCorrelation between one ALL patient and one AML patient = " + result[1]+"\n");
	            statusLabel.setText("Query 6 Executed");

			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}  
                    }
    }

    private void optionComboActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String option = retOption();
        
        if(option.contentEquals("Find Informative Genes")){
            diseasepart3Label.setVisible(true);
            diseasepart3Combo.setVisible(true);
        }
    }

    private void execpart3ButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    	SQLConnect sqlobj = new SQLConnect();
        String option = retOption();
        
        if(option.contentEquals("Find Informative Genes")){
            diseasepart3Label.setVisible(true);
            diseasepart3Combo.setVisible(true);
            String disease = retDiseasePart3();
            
            // call classify(sqlObj, disease);
            
            Map<Double,Integer> genes = new TreeMap<Double,Integer>();
            try {
				genes = Project1.part3(sqlobj, disease);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            outputText.setText("No.of Informative Genes found: "+genes.keySet().size());
            statusLabel.setText("Informative Genes processed!");

        }
        else{
            statusLabel.setText("Classification of patient in progress...");
            try {
				Project1.classify(sqlobj);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            double[] p_arr = new double[5];
            try {
				p_arr = Project1.classify(sqlobj);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
            
            for(int i = 0 ; i < 5 ; i++){
            	outputText.append("Test "+ i + " - >" + p_arr[i] + " " + (p_arr[i] < 0.05)+"\n");
            }
            
            
            statusLabel.setText("Classification of patient done");
        }
		
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*Connect to DB*/
        
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartApp().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify
    private javax.swing.JLabel clusterLabel;
    private javax.swing.JTextField clusterText;
    private javax.swing.JComboBox diseaseCombo;
    private javax.swing.JLabel diseaseLabel;
    private javax.swing.JComboBox diseasepart3Combo;
    private javax.swing.JLabel diseasepart3Label;
    private javax.swing.JButton execButton;
    private javax.swing.JButton execpart3Button;
    private javax.swing.JLabel goLabel;
    private javax.swing.JTextField goText;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel measurementLabel;
    private javax.swing.JTextField measurementText;
    private javax.swing.JLabel namesLabel;
    private javax.swing.JComboBox optionCombo;
    private javax.swing.JLabel optionLabel;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JTextArea outputText;
    private javax.swing.JLabel part2Label;
    private javax.swing.JPanel part2Panel;
    private javax.swing.JLabel part3Label;
    private javax.swing.JComboBox queryCombo;
    private javax.swing.JLabel queryLabel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel title;
    // End of variables declaration
}
